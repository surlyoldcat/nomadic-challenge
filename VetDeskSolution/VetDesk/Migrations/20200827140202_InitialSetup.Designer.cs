// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VetDesk.Entity;

namespace VetDesk.Migrations
{
    [DbContext(typeof(VetDeskContext))]
    [Migration("20200827140202_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VetDesk.Entity.Critter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CritterTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("LastWeight")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.HasKey("Id");

                    b.HasIndex("CritterTypeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Critter");
                });

            modelBuilder.Entity("VetDesk.Entity.CritterType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CritterType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cat"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Dog"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Llama"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Herp"
                        });
                });

            modelBuilder.Entity("VetDesk.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("VetDesk.Entity.Critter", b =>
                {
                    b.HasOne("VetDesk.Entity.CritterType", "CritterType")
                        .WithMany("Critter")
                        .HasForeignKey("CritterTypeId")
                        .HasConstraintName("FK_CritterType_Critter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetDesk.Entity.Customer", "Customer")
                        .WithMany("Critter")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Customer_Critter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
